<?xml version="1.0"?>
<launch>
  <arg name="uri0" default="radio://0/80/2M/E7E7E7E7E7" />
  <arg name="uri1" default="radio://0/70/2M"/>
  <arg name="uri2" default="radio://0/107/2M/E7E7E7E7BC"/>
  <arg name="uri3" default="radio://0/107/2M/E7E7E7E7BD"/>
  <arg name="uri4" default="radio://0/107/2M/E7E7E7E7BE"/>
  <arg name="frame" default="base_link" />
  <arg name="joy_dev" default="/dev/input/js0" />
  <arg name="x0" default="2.8" />
  <arg name="y0" default="2.0" />
  <arg name="z0" default="1.0" />

  <arg name="x1" default="3.5" />
  <arg name="y1" default="2.0" />
  <arg name="z1" default="1.0" />

  <arg name="x2" default="3.1" />
  <arg name="y2" default="2.5" />
  <arg name="z2" default="1.0" />

  <arg name="x3" default="3.1" />
  <arg name="y3" default="1.5" />
  <arg name="z3" default="1.0" />

  <arg name="x4" default="2.3" />
  <arg name="y4" default="2.0" />
  <arg name="z4" default="1.0" />

  <rosparam command="load" file="$(find bitcraze_lps_estimator)/data/anchor_pos.yaml" />

  <param name="robot_description" command="$(find xacro)/xacro.py $(find crazyflie_description)/urdf/crazyflie2.urdf.xacro" />
  <node name="rviz" pkg="rviz" type="rviz"
        args="-d $(find bitcraze_lps_estimator)/data/rvizconfig_swarm_with_goal.rviz"/>


  <group ns="crazyflie0">
    <node pkg="crazyflie_driver" type="crazyflie_add" name="crazyflie_add" output="screen">
      <param name="uri" value="$(arg uri0)" />
      <param name="tf_prefix" value="crazyflie0" />
      <rosparam>
        genericLogTopics: ["log_kfpos", "log_kfqt"]
        genericLogTopicFrequencies: [30, 30]
        genericLogTopic_log_kfpos_Variables: ["kalman.stateX", "kalman.stateY", "kalman.stateZ"]
        genericLogTopic_log_kfqt_Variables: ["kalman.q0", "kalman.q1", "kalman.q2", "kalman.q3"]
      </rosparam>
    </node>

    <node name="joy" pkg="joy" type="joy_node" output="screen">
      <param name="dev" value="$(arg joy_dev)" />
    </node>

    <node name="joystick_controller" pkg="crazyflie_demo" type="controller.py" output="screen">
      <param name="use_crazyflie_controller" value="True" />
    </node>

    <node name="controller_bridge" pkg="bitcraze_lps_estimator" type="crazyflie_controller_bridge.py" output="screen"/>

    <node name="pose" pkg="crazyflie_demo" type="publish_pose_teleop.py" output="screen">
      <param name="name" value="goal" />
      <param name="rate" value="30" />
      <param name="x" value="$(arg x0)" />
      <param name="y" value="$(arg y0)" />
      <param name="z" value="$(arg z0)" />
    </node>

    <node name="lps_efk_bridge" pkg="bitcraze_lps_estimator" type="lps_ekf_bridge.py" output="screen">
      <param name="tf_prefix" value="crazyflie1" />
    </node>

    <node name="lps_viz" pkg="bitcraze_lps_estimator" type="lps_viz.py" />

  </group>

  <group ns="crazyflie1">
    <node pkg="crazyflie_driver" type="crazyflie_add" name="crazyflie_add" output="screen">
      <param name="uri" value="$(arg uri1)" />
      <param name="tf_prefix" value="crazyflie1" />
      <rosparam>
        genericLogTopics: ["log_kfpos", "log_kfqt"]
        genericLogTopicFrequencies: [30, 30]
        genericLogTopic_log_kfpos_Variables: ["kalman.stateX", "kalman.stateY", "kalman.stateZ"]
        genericLogTopic_log_kfqt_Variables: ["kalman.q0", "kalman.q1", "kalman.q2", "kalman.q3"]
      </rosparam>
    </node>

    <node name="joy" pkg="joy" type="joy_node" output="screen">
      <param name="dev" value="$(arg joy_dev)" />
    </node>

    <node name="joystick_controller" pkg="crazyflie_demo" type="controller.py" output="screen">
      <param name="use_crazyflie_controller" value="True" />
    </node>

    <node name="controller_bridge" pkg="bitcraze_lps_estimator" type="crazyflie_controller_bridge.py" output="screen"/>

    <node name="pose" pkg="crazyflie_demo" type="publish_pose_teleop.py" output="screen">
      <param name="name" value="goal" />
      <param name="rate" value="30" />
      <param name="x" value="$(arg x1)" />
      <param name="y" value="$(arg y1)" />
      <param name="z" value="$(arg z1)" />
    </node>

    <node name="lps_efk_bridge" pkg="bitcraze_lps_estimator" type="lps_ekf_bridge.py" output="screen">
      <param name="tf_prefix" value="crazyflie1" />
    </node>

    <node name="lps_viz" pkg="bitcraze_lps_estimator" type="lps_viz.py" />

  </group>


  <group ns="crazyflie2">
    <node pkg="crazyflie_driver" type="crazyflie_add" name="crazyflie_add" output="screen">
      <param name="uri" value="$(arg uri2)" />
      <param name="tf_prefix" value="crazyflie2" />
      <rosparam>
        genericLogTopics: ["log_kfpos", "log_kfqt"]
        genericLogTopicFrequencies: [30, 30]
        genericLogTopic_log_kfpos_Variables: ["kalman.stateX", "kalman.stateY", "kalman.stateZ"]
        genericLogTopic_log_kfqt_Variables: ["kalman.q0", "kalman.q1", "kalman.q2", "kalman.q3"]
      </rosparam>
    </node>

    <node name="joy" pkg="joy" type="joy_node" output="screen">
      <param name="dev" value="$(arg joy_dev)" />
    </node>

    <node name="joystick_controller" pkg="crazyflie_demo" type="controller.py" output="screen">
      <param name="use_crazyflie_controller" value="True" />
    </node>

    <node name="controller_bridge" pkg="bitcraze_lps_estimator" type="crazyflie_controller_bridge.py" output="screen"/>

    <node name="pose" pkg="crazyflie_demo" type="publish_pose_teleop.py" output="screen">
      <param name="name" value="goal" />
      <param name="rate" value="30" />
      <param name="x" value="$(arg x2)" />
      <param name="y" value="$(arg y2)" />
      <param name="z" value="$(arg z2)" />
    </node>

    <node name="lps_efk_bridge" pkg="bitcraze_lps_estimator" type="lps_ekf_bridge.py" output="screen">
      <param name="tf_prefix" value="crazyflie1" />
    </node>

    <node name="lps_viz" pkg="bitcraze_lps_estimator" type="lps_viz.py" />

  </group>

  <group ns="crazyflie3">
    <node pkg="crazyflie_driver" type="crazyflie_add" name="crazyflie_add" output="screen">
      <param name="uri" value="$(arg uri3)" />
      <param name="tf_prefix" value="crazyflie3" />
      <rosparam>
        genericLogTopics: ["log_kfpos", "log_kfqt"]
        genericLogTopicFrequencies: [30, 30]
        genericLogTopic_log_kfpos_Variables: ["kalman.stateX", "kalman.stateY", "kalman.stateZ"]
        genericLogTopic_log_kfqt_Variables: ["kalman.q0", "kalman.q1", "kalman.q2", "kalman.q3"]
      </rosparam>
    </node>

    <node name="joy" pkg="joy" type="joy_node" output="screen">
      <param name="dev" value="$(arg joy_dev)" />
    </node>

    <node name="joystick_controller" pkg="crazyflie_demo" type="controller.py" output="screen">
      <param name="use_crazyflie_controller" value="True" />
    </node>

    <node name="controller_bridge" pkg="bitcraze_lps_estimator" type="crazyflie_controller_bridge.py" output="screen"/>

    <node name="pose" pkg="crazyflie_demo" type="publish_pose_teleop.py" output="screen">
      <param name="name" value="goal" />
      <param name="rate" value="30" />
      <param name="x" value="$(arg x3)" />
      <param name="y" value="$(arg y3)" />
      <param name="z" value="$(arg z3)" />
    </node>

    <node name="lps_efk_bridge" pkg="bitcraze_lps_estimator" type="lps_ekf_bridge.py" output="screen">
      <param name="tf_prefix" value="crazyflie1" />
    </node>

    <node name="lps_viz" pkg="bitcraze_lps_estimator" type="lps_viz.py" />

  </group>

  <group ns="crazyflie4">
    <node pkg="crazyflie_driver" type="crazyflie_add" name="crazyflie_add" output="screen">
      <param name="uri" value="$(arg uri4)" />
      <param name="tf_prefix" value="crazyflie4" />
      <rosparam>
        genericLogTopics: ["log_kfpos", "log_kfqt"]
        genericLogTopicFrequencies: [30, 30]
        genericLogTopic_log_kfpos_Variables: ["kalman.stateX", "kalman.stateY", "kalman.stateZ"]
        genericLogTopic_log_kfqt_Variables: ["kalman.q0", "kalman.q1", "kalman.q2", "kalman.q3"]
      </rosparam>
    </node>

    <node name="joy" pkg="joy" type="joy_node" output="screen">
      <param name="dev" value="$(arg joy_dev)" />
    </node>

    <node name="joystick_controller" pkg="crazyflie_demo" type="controller.py" output="screen">
      <param name="use_crazyflie_controller" value="True" />
    </node>

    <node name="controller_bridge" pkg="bitcraze_lps_estimator" type="crazyflie_controller_bridge.py" output="screen"/>

    <node name="pose" pkg="crazyflie_demo" type="publish_pose_teleop.py" output="screen">
      <param name="name" value="goal" />
      <param name="rate" value="30" />
      <param name="x" value="$(arg x4)" />
      <param name="y" value="$(arg y4)" />
      <param name="z" value="$(arg z4)" />
    </node>

    <node name="lps_efk_bridge" pkg="bitcraze_lps_estimator" type="lps_ekf_bridge.py" output="screen">
      <param name="tf_prefix" value="crazyflie1" />
    </node>

    <node name="lps_viz" pkg="bitcraze_lps_estimator" type="lps_viz.py" />

  </group>

  <node pkg="tf" type="static_transform_publisher" name="link1_broadcaster"
        args="1 0 0 0 0 0 1 world lps 100" />

  <include file="$(find crazyflie_driver)/launch/crazyflie_server.launch" />
</launch>
